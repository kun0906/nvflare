{
  "format_version": 2,

  "model_checkpoint_interval": 1,

  "server": {
    "heart_beat_timeout": 600
  },
  "task_data_filters": [],
  "task_result_filters": [],

  "snapshot_persistor": {
        "path": "nvflare.app_common.state_persistors.storage_state_persistor.StorageStatePersistor",
        "args": {
            "uri_root": "/",
            "storage": {
                "path": "nvflare.app_common.storages.filesystem_storage.FilesystemStorage",
                "args": {
                    "root_dir": "/tmp/nvflare/snapshot-storage",
                    "uri_root": "/"
                }
            }
        }
    },

  "components": [
    {
    "id": "model_selector",
    "name": "IntimeModelSelector",
    "args": {}
    },
    {
      "id": "persistor",
      "path": "nvflare.app_opt.pt.file_model_persistor.PTFileModelPersistor",
      "args": {}
    },
    {
      "id": "shareable_generator",
      "path": "nvflare.app_common.shareablegenerators.full_model_shareable_generator.FullModelShareableGenerator",
      "args": {}
    },
    {
      "id": "aggregator",
      "path": "intime_accumulate_model_aggregator.InTimeAccumulateWeightedAggregator",
      "args": {
        "expected_data_kind": "WEIGHTS",
        "aggregation_weights": {

        }
      }
    },
    {
      "id": "model_locator",
      "path": "pt_model_locator.PTModelLocator",
      "args": {}
    },
    {
      "id": "json_generator",
      "path": "nvflare.app_common.widgets.validation_json_generator.ValidationJsonGenerator",
      "args": {}
    },
    {
      "id": "tb_analytics_receiver",
      "path": "nvflare.app_opt.tracking.tb.tb_receiver.TBAnalyticsReceiver",
      "args": {"events": ["fed.analytix_log_stats"]}
    }
  ],
  "workflows": [
      {
        "id": "pre_train",
        "name": "InitializeGlobalWeights",
        "args": {
          "task_name": "get_weights"
        }
      },
      {
        "id": "scatter_and_gather",
        "path": "scatter_and_gather.ScatterAndGather",
        "args": {
            "min_clients" : 10,
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
            "num_rounds" : 5,
=======
            "num_rounds" : 10,
>>>>>>> 45127c9 (v0.0.7-1:sync with different devices)
=======
            "num_rounds" : 2,
>>>>>>> 6cf45cd (v0.0.8: Add more GPUs and store local models in each iteration)
=======
            "num_rounds" : 3,
>>>>>>> cf8e571 (v0.1.0: Save global_model in each round)
=======
            "num_rounds" : 10,
>>>>>>> 7e2b293 (v0.1.1: Add collect_and_assemble_aggregator)
=======
            "num_rounds" : 20,
>>>>>>> c18aa18 (v0.1.2: Add collect_and_assemble_aggregator and assembler)
=======
            "num_rounds" : 3,
>>>>>>> 97460c5 (v0.1.3: Add collect_and_assemble_aggregator and assembler)
=======
            "num_rounds" : 100,
>>>>>>> 75ab0f3 (v0.1.4: Save the intermediate parameters for FedAvg)
=======
            "num_rounds" : 20,
>>>>>>> 574642e (v0.1.6: Add "nvflare simulator")
=======
            "num_rounds" : 2,
>>>>>>> c139ade (v0.1.7: Add "initial_global_weights.py")
=======
            "num_rounds" : 1,
>>>>>>> b57b2ac (v0.1.8: Add "model_selector" in config_fed_server.json and 'Byzantine_clients')
            "start_round": 0,
            "wait_time_after_min_received": 10,
            "aggregator_id": "aggregator",
            "persistor_id": "persistor",
            "shareable_generator_id": "shareable_generator",
            "train_task_name": "train",
            "train_timeout": 0
        }
      },
      {
        "id": "cross_site_validate",
        "name": "CrossSiteModelEval",
        "args": {
          "model_locator_id": "model_locator"
        }
      }
  ]
}
